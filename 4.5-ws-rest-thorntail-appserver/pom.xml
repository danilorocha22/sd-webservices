<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.manoelcampos</groupId>
    <artifactId>rest-server-thorntail</artifactId>
    <name>${project.artifactId}</name>
    <version>1.0.0</version>
    <packaging>war</packaging>
    
    <!-- Estrutura básica do projeto criada em https://thorntail.io/generator/ -->

    <properties>
        <version.thorntail>2.4.0.Final</version.thorntail>
        <version.mysql>5.1.47</version.mysql>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <failOnMissingWebXml>false</failOnMissingWebXml>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.thorntail</groupId>
                <artifactId>bom-all</artifactId>
                <version>${version.thorntail}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Dependências do Thorntail -->
        <dependency>
            <groupId>io.thorntail</groupId>
            <artifactId>jpa</artifactId>
        </dependency>

        <dependency>
            <groupId>io.thorntail</groupId>
            <artifactId>jaxrs-jsonp</artifactId>
        </dependency>
        
        <dependency>
            <!-- 
            Cria automaticamente o DataSource a partir
            das configurações definidas no arquivo
            src/main/resources/project-mysql.yaml
            (para PostgreSQL veja https://github.com/thorntail/thorntail-examples/blob/master/datasource/datasource-war/src/main/resources/project-postgres.yaml)
            -->
            <groupId>io.thorntail</groupId>
            <artifactId>datasources</artifactId>
        </dependency>
        
        <dependency>
            <!-- Suporte para a Java Transaction API (JTA) -->
            <groupId>io.thorntail</groupId>
            <artifactId>transactions</artifactId>
        </dependency>        

        <dependency>
            <groupId>io.thorntail</groupId>
            <artifactId>cdi</artifactId>
        </dependency>
        
        <dependency>
            <!-- Hot deploy (atualizar a app sem precisar reiniciar o servidor) -->
            <groupId>io.thorntail</groupId>
            <artifactId>scanner</artifactId>
            <version>${version.thorntail}</version>
        </dependency>   
                
        <!-- Dependências da aplicação 
        Observe que dependências como o Hibernate são adicionadas 
        como "provided", indicando que o Thorntail é quem fornecerá as mesmas.
        Dependências do JavaEE como CDI são normais de serem definidas
        como "provided", mas dependências externas (como o Hibernate) 
        não vem inclusas em outros App Servers como o GlassFish 
        (este inclui o EclipseLink no lugar).
        -->        
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${version.mysql}</version>
        </dependency>                

        <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.1-api</artifactId>
            <version>1.0.0.Final</version>
            <scope>provided</scope>
        </dependency>
        
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <version>1.2</version>
            <scope>provided</scope>
        </dependency>
        
        <dependency>
            <groupId>org.jboss.spec.javax.transaction</groupId>
            <artifactId>jboss-transaction-api_1.2_spec</artifactId>
            <version>1.0.1.Final</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>    

    <build>
        <finalName>${project.artifactId}</finalName>
        
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <!--
                Realiza substituição de variávels nos arquivos da pastas resources,
                tal como o standalone.xml. 
                -->
                <filtering>true</filtering>
            </resource>
        </resources>
            
        <plugins>
            <plugin>
                <groupId>io.thorntail</groupId>
                <artifactId>thorntail-maven-plugin</artifactId>
                <version>${version.thorntail}</version>                        
                <executions>
                    <execution>
                        <goals>
                            <goal>package</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>    
        </plugins>
    </build>

    <profiles>
        <profile>
            <!-- Profile that enables the Hot Deploy -->
            <id>redeploy</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>3.1.1</version>
                        <executions>
                            <execution>
                                <id>copy-war-to-hot-deployment-dir</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>${project.groupId}</groupId>
                                            <artifactId>${project.artifactId}</artifactId>
                                            <version>${project.version}</version>
                                            <type>${project.packaging}</type>
                                            <overWrite>true</overWrite>
                                            <outputDirectory>${project.build.directory}/scan</outputDirectory>
                                            <destFileName>${project.build.finalName}.${project.packaging}</destFileName>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>    
            
</project>
